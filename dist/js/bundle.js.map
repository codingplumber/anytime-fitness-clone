{"version":3,"sources":["app.js","find.js","footer.js","header.js","mainCtrl.js","mainSrvc.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","mainSrvc","lat","lng","initMap","options","zoom","center","map","google","maps","Map","document","getElementById","getGeo","location","then","response","directive","restrict","link","scope","elem","att","$","ready","click","toggleClass","service","$http","key","geoURL","get","params","address","res","data","results","geometry","catch","console","log","error"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router'])\n.config(function($stateProvider, $urlRouterProvider) {\n\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: './views/home.html'\n    })\n    .state('training', {\n      url: '/training',\n      templateUrl: './views/training.html'\n    })\n    .state('join', {\n      url: '/join',\n      templateUrl: './views/join.html'\n    })\n    .state('find', {\n      url: '/find',\n      templateUrl: './views/find.html',\n      controller: 'findCtrl'\n    })\n\n})\n","angular.module('app')\n.controller('findCtrl', function($scope, mainSrvc) {\n\n  var lat,\n      lng;\n\n  ///////////////////////////Maps////////////////////////////////////////////\n  $scope.initMap = (lat, lng) => {\n    var options = {};\n\n    // Map options\n    if (!lat && !lng) {\n      options = {\n        zoom: 5,\n        center: { lat: 39.50, lng: -98.35 }\n      }\n    } else {\n      options = {\n        zoom: 9,\n        center: { lat: lat, lng: lng }\n      }\n    }\n\n    // New map\n    $scope.map = new google.maps.Map(document.getElementById('map'), options);\n\n    // Add marker\n    // $scope.marker = new google.maps.Marker({\n    //   position: {lat: 42.4668, lng: -70.9495},\n    //   map: map\n    // });\n  }\n  //\n  $scope.initMap(lat, lng);\n  //////////////////////Geocoding///////////////////////////////////////////\n\n  // Turn address or zip into geolocation\n  $scope.getGeo = (location) => {\n    mainSrvc\n      .getGeo(location)\n      .then(response => {\n        lat = response.lat;\n        lng = response.lng;\n\n        $scope.initMap(lat, lng);\n      })\n\n\n    $scope.location = '';\n  }\n\n\n\n  /////////////////////////////////////////////////////////////////////////\n\n  //\n  // var mapOptions = {\n  //   zoom: 4,\n  //   center: new google.maps.LatLng(25,80),\n  //   mapTypeId: google.maps.MapTypeId.TERRAIN\n  // }\n  //\n  // $scope.map = new google.maps.Map(document.getElementById('map'), mapOptions);\n  //\n  // $scope.markers = [];\n  //\n  // var infoWindow = new google.maps.InfoWindow();\n  //\n  // var createMarker = function(info) {\n  //\n  //   var marker = new google.maps.Marker({\n  //     map: $scope.map,\n  //     position: new google.maps.LatLng(info.lat, info.long),\n  //     title: info.city\n  //   });\n  //   marker.content = '<div class=\"infoWindowContent\">' + info.desc + '</div>';\n  //\n  //   google.maps.event.addListener(marker, 'click', function(){\n  //   infoWindow.setContent('<h2>' + marker.title + '</h2>' + marker.content);\n  //   infoWindow.open($scope.map, marker);\n  //   });\n  //\n  //   $scope.markers.push(marker);\n  // }\n  //\n  // // for (var i = 0; i < cities.length; i++){\n  // //   createMarker(cities[i]);\n  // // }\n  //\n  // $scope.openInfoWindow = function(e, selectedMarker){\n  //   e.preventDefault();\n  //   google.maps.event.trigger(selectedMarker, 'click');\n  // }\n\n})\n","angular.module('app')\n.directive('footer', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/footer.html'\n  }\n\n})\n","angular.module('app')\n.directive('header', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/header.html',\n    link: function(scope, elem, att) {\n\n      $(document).ready(function(){\n        $('#nav-icon3').click(function(){\n          $(this).toggleClass('open');\n\n          $('#header-slide').toggleClass('down');\n\n          $('#header-wrapper-slide').toggleClass('down');\n        });\n\n      });\n    }\n  }\n\n})\n","angular.module('app')\n.controller('mainCtrl', function($scope, mainSrvc) {\n\n  // $scope.test = 'ctrl working';\n  // $scope.test2 = mainSrvc.test;\n\n\n})\n","angular.module('app')\n.service('mainSrvc', function($http) {\n\n  // const baseURL = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyAAGhSp6JMWAFvrvAA_8vXh3HR11TBus5Y&callback=initMap'\n  //\n  // function initMap() {\n  //   var options = {\n  //     zoom: 13,\n  //     center: { lat: 42.3601, lng: -71.0589 }\n  //   }\n  // }\n  //\n  // // var map = new google.maps.Map(document.getElementById('map'), options);\n  //\n  // this.getMap = () => {\n  //   var map = new google.maps.Map(document.getElementById('map'), options);\n  //   return $http({\n  //     method: 'GET',\n  //     url: baseURL\n  //   })\n  //   .then(response => {\n  //     console.log(response.data);\n  //     return response.data;\n  //   })\n  // }\n  /////////////////////////////////////////\n\n\n  //////////////////////Geocoding///////////////////////////////////////////\n  const key = 'AIzaSyBnBHEVWA6Gg6Gk68qeAIFfLUkXzwRVNUQ';\n  const geoURL = 'https://maps.googleapis.com/maps/api/geocode/json'\n\n\n  this.getGeo = (location) => {\n    // console.log('mainSrvc', location);\n    // var location = loc;\n    return $http.get('https://maps.googleapis.com/maps/api/geocode/json',{\n      params: {\n        address:location,\n        key:'AIzaSyBnBHEVWA6Gg6Gk68qeAIFfLUkXzwRVNUQ'\n      }\n    })\n    .then(response => {\n      // Log full response\n      // console.log(response);\n      // Formatted geolocation\n      // console.log(response.data.results[0].geometry.location);\n      var res = response.data.results[0].geometry.location;\n      return res;\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n\n})\n"]}